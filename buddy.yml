- pipeline: "Build&Test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Execute: cargo build"
      type: "BUILD"
      working_directory: "/buddy/blockchain"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
        - "source $HOME/.cargo/env"
        - "rustup update nightly"
        - "rustup target add wasm32-unknown-unknown --toolchain nightly"
        - "rustup update stable"
        - "cargo install --git https://github.com/alexcrichton/wasm-gc"
        - "rustup component add rustfmt --toolchain stable-x86_64-unknown-linux-gnu"
        - "./scripts/init.sh"
        - "./scripts/build.sh"
        - "cargo build --release"
        - "cargo install --locked --path ."
      setup_commands:
        - "apt update"
        - "apt upgrade -y"
        - "apt install -y wget build-essential libssl-dev software-properties-common curl"
        - "wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -"
        - 'apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"'
        - "apt update"
        - "apt upgrade -y"
        - "apt install -y clang-6.0"
        - "apt install -y make clang pkg-config libssl-dev"
        - "apt install -y cmake openssl git libclang-dev"
      mount_filesystem_path: "/buddy/blockchain"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Execute: cargo test"
      type: "BUILD"
      disabled: true
      working_directory: "/buddy/blockchain"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "apt update"
        - "apt install git"
        - "git --version"
        - "./scripts/tests.sh"
      mount_filesystem_path: "/buddy/blockchain"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Send notification to Telegram"
      type: "TELEGRAM"
      trigger_time: "ON_FAILURE"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME failed execution ($BUDDY_INVOKER_URL)"
      parse_mode: "MARKDOWN"
      trigger_condition: "ALWAYS"
      integration_id: 58112
- pipeline: "Deploy Bootnodes, Validators"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Deploy Bootnode 01 and Validator 01"
      type: "SSH_COMMAND"
      login: "root"
      host: "bootnode-01.katalchain.com"
      port: "22"
      env_key: "secure!06+O5IJv8Eob+V0hCgfO9w=="
      authentication_mode: "ENV_KEY"
      commands:
        - "apt upgrade -y"
        - "export PATH="$HOME/.cargo/bin:$PATH"
        - "cd blockchain"
        - "git checkout master"
        - "git pull origin master"
        - "./scripts/init.sh"
        - "systemctl stop katalchain-validator.service"
        - "cargo install --locked --force --path ."
        - "systemctl restart katalchain-validator.service"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Deploy Bootnode 02 and Validator 02"
      type: "SSH_COMMAND"
      login: "root"
      host: "bootnode-02.katalchain.com"
      port: "22"
      env_key: "secure!06+O5IJv8Eob+V0hCgfO9w=="
      authentication_mode: "ENV_KEY"
      commands:
        - "apt upgrade -y"
        - "export PATH="$HOME/.cargo/bin:$PATH"
        - "cd blockchain"
        - "git checkout master"
        - "git pull origin master"
        - "./scripts/init.sh"
        - "systemctl stop katalchain-validator.service"
        - "cargo install --locked --force --path ."
        - "systemctl restart katalchain-validator.service"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
- pipeline: "Deploy Endpoint"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "development"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Deploy Endpoint"
      type: "SSH_COMMAND"
      login: "root"
      host: "endpoint.katalchain.com"
      port: "22"
      env_key: "secure!06+O5IJv8Eob+V0hCgfO9w=="
      authentication_mode: "ENV_KEY"
      commands:
        - "apt upgrade -y"
        - "export PATH="$HOME/.cargo/bin:$PATH"
        - "cd blockchain"
        - "git checkout development"
        - "git pull origin development"
        - "./scripts/init.sh"
        - "systemctl stop katalchain-validator.service"
        - "cargo install --locked --force --path ."
        - "systemctl restart katalchain-validator.service"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
